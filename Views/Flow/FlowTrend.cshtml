@{
    ViewBag.Title = "网站访问量统计分析";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    var sum_url = "http://60.191.205.94/read?sId=" + website_id + "&startDate=";
    var databyhour_url = "http://60.191.205.94/TrendByHour?sId=" + website_id + "&startDate=";
    var databyday_url = "http://60.191.205.94/TrendByDay?sId=" + website_id + "&startDate=";
    var xdata = [];
    var ydata = [];
    $(function () {
        $("#qsfx").addClass("current");
        $("#f_date").val($("#startdate").val());

        getJosnDataByAPI(sum_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test1");
        getJosnDataByAPI(databyhour_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");


        $("#trigger").powerFloat({
            target: $("#targetBox"),
            width: "150px"
        });

        $("#seltag").click(function () {
            var a = "";
            $('input[type="checkbox"][name="chk"]:checked').each(
                function () {
                    a = a + "|" + $(this).next("label").text();
                }
            );
            var yydata = [];
            $.each(ydata, function (i, n) {
                var sub = "|" + n.name;
                if (a.indexOf(sub) >= 0) {
                    yydata.push(n);
                }
            });
            createcharts(xdata, yydata);
        });
    });

    function createcharts(xdata, ydata) {
        var chart = {
            title: {
                text: '当天时段访问趋势图',
                x: -20 //center
            },
            subtitle: {
                text: '',
                x: -20
            },
            xAxis: {
                categories: xdata,
                title: {
                    text: '时间（小时）/日期'
                },
                gridLineWidth: 1,
                tickmarkPlacement: 'on',
                labels: { step: 2 }
            },
            yAxis: {
                title: {
                    align: 'high',
                    offset: 0,
                    text: '访问量',
                    rotation: 0,
                    y: -10
                },
                min: 0,
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + '</b><br/>' +
                    this.x + ':' + this.y;
                }
            },
            legend: {
                layout: 'horizontal',
                align: 'center',
                verticalAlign: 'bottom',
                borderWidth: 1
            },
            series: ydata
        };
        if ($("#startdate").val() == $("#enddate").val()) {
            chart.xAxis.max = 23;
        }
        else {
            chart.xAxis.labels.step = 5;
        }
        $('#container').highcharts(chart);
    }

    function createShowingTable(data) {
        //获取后台传过来的jsonData,并进行解析 
        //var dataArray = $.parseJSON(data.jsonData);
        //此处需要让其动态的生成一个table并填充数据
        var dataArray = data;
        var tableStr = "";
        tableStr = tableStr + "<thead><tr id='dataTheadTr'><th>时段</th><th>浏览次数(PV)</th><th>独立访客(UV)</th><th>IP</th><th>新独立访客</th><th>访问次数</th><th>人均浏览页数</th><th>平均访问深度</th><th>平均访问时长</th><th>跳出率</th></tr></thead>";
        var len = dataArray == null ? 0 : dataArray.length;
        var sumPV = 0;
        var sumUV = 0;
        var sumIP = 0;
        var sumNEWUV = 0;
        var sumUNUM = 0;
        for (var i = 0; i < len; i++) {
            tableStr = tableStr + "<tr><td>" + (typeof (dataArray[i].hour) == "undefined" ? dataArray[i].StatisticalDate : dataArray[i].hour) + "</td><td>" + dataArray[i].pvnum + "</td><td>" + dataArray[i].uvnum + "</td><td>" + dataArray[i].ipnum + "</td><td>" + dataArray[i].newuvnum + "</td><td>" + dataArray[i].vnum + "</td><td>" + dataArray[i].avgpage + "</td><td>" + dataArray[i].avgdepth + "</td><td>" + dataArray[i].avglength + "</td><td>" + dataArray[i].jumpnum + "</td></tr>";
            //            sumPV += dataArray[i].PV;
            //            sumUV += dataArray[i].UV;
            //            sumIP += dataArray[i].IP;
            //            sumNEWUV += dataArray[i].NEWUV;
            //            sumUNUM += dataArray[i].UNUM;
        }
        //        tableStr = tableStr + "<tr><td>总计：</td><td>" + sumPV + "</td><td>" + sumUV + "</td><td>" + sumIP + "</td><td>" + sumNEWUV + "</td><td>" + sumUNUM + "</td></tr>";
        tableStr = tableStr + "";
        //将动态生成的table添加的事先隐藏的div中. 
        $("#dataTable").html(tableStr);
    }

    function createSumTable(data) {
        //获取后台传过来的jsonData,并进行解析 
        //var dataArray = $.parseJSON(data.jsonData);
        //此处需要让其动态的生成一个table并填充数据
        var dataArray = data;
        var tableStr = "";
        tableStr = tableStr + "<tr><th>浏览次数(PV)</th><th>独立访客(UV)</th><th>IP</th><th>新独立访客</th><th>访问次数</th><th>人均浏览页数</th><th>平均访问深度</th><th>平均访问时长</th><th>跳出率</th></tr>";

        tableStr = tableStr + "<tr><td>" + dataArray.PV + "</td><td>" + dataArray.UV + "</td><td>" + dataArray.IP + "</td><td>" + dataArray.NewUV + "</td><td>" + dataArray.Session + "</td><td>" + dataArray.ThePerCapitaBrowsingPages + "</td><td>" + dataArray.AvgDepthCount + "</td><td>" + dataArray.AvgTimeSpent + "秒</td><td>" + dataArray.AvgOut + "%</td></tr>";

        tableStr = tableStr + "";
        //将动态生成的table添加的事先隐藏的div中. 
        $("#sumdata").html(tableStr);
    }

    function test1(data) {
        createSumTable(data[0]);
    }

    function test2(data) {
        createShowingTable(data);
        var dataArray = data;
        var len = dataArray == null ? 0 : dataArray.length;
        xdata = [];
        var pv = { name: '浏览次数', data: [] };
        var uv = { name: '独立访客(UV)', data: [] };
        var ip = { name: 'IP', data: [] };
        var newuv = { name: '新独立访客', data: [] };
        var unum = { name: '访问次数', data: [] };
        var pvarr = { name: '', data: [] };
        for (var i = 0; i < len; i++) {
            if (typeof (dataArray[i].hour) == "undefined")
                xdata.push(dataArray[i].StatisticalDate);
            else
                xdata = ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00',
            '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'];

            pv.data.push(dataArray[i].pvnum == "-" ? 0 : parseFloat(dataArray[i].pvnum));
            uv.data.push(dataArray[i].uvnum == "-" ? 0 : parseFloat(dataArray[i].uvnum));
            ip.data.push(dataArray[i].ipnum == "-" ? 0 : parseFloat(dataArray[i].ipnum));
            newuv.data.push(dataArray[i].newuvnum == "-" ? 0 : parseFloat(dataArray[i].newuvnum));
            unum.data.push(dataArray[i].vnum == "-" ? 0 : parseFloat(dataArray[i].vnum));
        }
        ydata = [];
        ydata.push(pv); ydata.push(uv); ydata.push(ip); ydata.push(newuv); ydata.push(unum);
        createcharts(xdata, ydata);
    }

    function getJosnDataByAPI(url, fun) {
        $.ajax({
            url: url,
            type: "get",
            dataType: "jsonp",
            jsonp: "callback",
            jsonpCallback: fun
            //            success: function (json) {
            //                alert(json);
            //            }
        });
    }
    function GetDateStr(AddDayCount) {
        var dd = new Date();
        dd.setDate(dd.getDate() + AddDayCount); //获取AddDayCount天后的日期 
        var y = dd.getFullYear();
        var m = dd.getMonth() + 1; //获取当前月份的日期 
        var d = dd.getDate();
        return y + "-" + m + "-" + d;
    }
    function changeday(id) {
        $(".select > li").removeClass("active");
        $("#" + id).parent().addClass("active");
        switch (id) {
            case "aToday":
                $("#startdate").val(GetDateStr(0));
                $("#enddate").val(GetDateStr(0));
                $("#f_date").val($("#startdate").val());
                getJosnDataByAPI(databyhour_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
                break;
            case "aYesterday":
                $("#startdate").val(GetDateStr(-1));
                $("#enddate").val(GetDateStr(-1));
                $("#f_date").val($("#startdate").val());
                getJosnDataByAPI(databyhour_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
                break;
            case "aRecent7Days":
                $("#startdate").val(GetDateStr(-6));
                $("#enddate").val(GetDateStr(-0));
                $("#f_date").val($("#startdate").val() + " -> " + $("#enddate").val());
                getJosnDataByAPI(databyday_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
                break;
            case "aRecent30Days":
                $("#startdate").val(GetDateStr(-29));
                $("#enddate").val(GetDateStr(0));
                $("#f_date").val($("#startdate").val() + " -> " + $("#enddate").val());
                getJosnDataByAPI(databyday_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
                break;
            default:
                getJosnDataByAPI(databyhour_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
                break;
        }
        var startDate = $("#startdate").val();
        var endDate = $("#enddate").val();
        getJosnDataByAPI(sum_url + startDate + "&endDate=" + endDate, "test1");
    }

    function showAll(id) {
        var startdate = $("#startdate").val();
        var enddate = $("#enddate").val();

        getJosnDataByAPI(sum_url + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test1");
        var dataurl = databyhour_url;
        if ($("#startdate").val() != $("#enddate").val())
            dataurl = databyday_url;
        getJosnDataByAPI(dataurl + $("#startdate").val() + "&endDate=" + $("#enddate").val(), "test2");
        var ctime = $("#startdate").val() == $("#enddate").val() ? $("#startdate").val() : $("#startdate").val() + "至" + $("#enddate").val()
        $("#ctime").html(ctime);
    }

</script>


<div>

    <div class="toolbar cf"> 
          <!--==操作按钮==-->
          <div class="tool_date cf">
            <div class="title cf">
              <div class="more">               
                <ul class="select" id="toolbar"><li class="active"><a href="#" id="aToday" onclick="changeday(this.id)">今天</a></li><li class=""><a href="#" id="aYesterday" onclick="changeday(this.id)">昨天</a></li><li class=""><a href="#" id="aRecent7Days" onclick="changeday(this.id)">最近7天</a></li><li class=""><a href="#" id="aRecent30Days" onclick="changeday(this.id)">最近30天</a></li></ul>
              </div>
              <div class="date" id="div_date"><input size="30" id="f_date" /></div>
              <div class="date" id="div_compare_date"><input type="button" id="query" value="确 定" style="width:60px" onclick="showAll(1)"/></div>
            </div>
          </div>
        </div>
    <div style="clear: both;">
        <table id="sumdata" class="sumtb"></table>
    </div>
    <div>
        <button id="trigger" class="btn_thin1"><i class="i_opt"></i>设置指标</button>
        <div id="container" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
    </div>
    
    <div id="table_column" class="column cf">
          <div class="title">
            访问量分析汇总表</div>
          <div>
            <table id="dataTable" class="tablesorter"></table>
          </div>
        </div>
</div>

<input type="hidden" id="site_id" value=""/>
<input type="hidden" id="select_time_start" value=""/>
<input type="hidden" id="select_time_end" value=""/>
<div style="position: absolute;background: #ffffe6;border: 1px solid #aaa; display:none; padding-left:1px" id="targetBox">
      <ul style="list-style:none; margin:0; padding:0;">
        <li><input name="chk" type="checkbox" value="PV" checked="checked" id="chkPV" /><label for="chkPV">浏览次数</label></li>
        <li><input name="chk" type="checkbox" value="UV" checked="checked" id="chkUV" /><label for="chkUV">独立访客(UV)</label></li>
        <li><input name="chk" type="checkbox" value="IP" checked="checked" id="chkIP" /><label for="chkIP">IP</label></li>
        <li><input name="chk" type="checkbox" value="NEWUV" checked="checked" id="chkNEWUV" /><label for="chkNEWUV">新独立访客</label></li>
        <li><input name="chk" type="checkbox" value="UNUM" checked="checked" id="chkUNUM" /><label for="chkUNUM">访问次数</label></li>
        @*<li><input name="chk" type="checkbox" value="AVGPAGE" />人均浏览页数</li>
        <li><input name="chk" type="checkbox" value="AVGDEPTH" />平均访问深度</li>
        <li><input name="chk" type="checkbox" value="AVGLENGTH" />平均访问时长</li>
        <li><input name="chk" type="checkbox" value="JUMP" />跳出率</li>*@
      </ul>
      <p><input id="seltag" type="button" value="确定"/>    <a href="#" onclick="$('#targetBox').hide();">取消</a></p>
</div>


    <script type="text/javascript">//<![CDATA[


        var SELECTED_RANGE = null;
        function getSelectionHandler() {
            var startDate = null;
            var ignoreEvent = false;
            return function (cal) {
                var selectionObject = cal.selection;

                // avoid recursion, since selectRange triggers onSelect
                if (ignoreEvent)
                    return;

                var selectedDate = selectionObject.get();
                if (startDate == null) {
                    startDate = selectedDate;
                    SELECTED_RANGE = null;
                    //document.getElementById("info").innerHTML = "Click to select end date";

                    // comment out the following two lines and the ones marked (*) in the else branch
                    // if you wish to allow selection of an older date (will still select range)
                    //cal.args.min = Calendar.intToDate(selectedDate);
                    cal.refresh();
                    $("#startdate").val(Calendar.printDate(Calendar.intToDate(selectedDate), "%Y-%m-%d"));
                    $("#enddate").val(Calendar.printDate(Calendar.intToDate(selectedDate), "%Y-%m-%d"));
                } else {
                    ignoreEvent = true;
                    selectionObject.selectRange(startDate, selectedDate);
                    ignoreEvent = false;
                    SELECTED_RANGE = selectionObject.sel[0];

                    // alert(SELECTED_RANGE.toSource());
                    //
                    // here SELECTED_RANGE contains two integer numbers: start date and end date.
                    // you can get JS Date objects from them using Calendar.intToDate(number)

                    startDate = null;

                    // (*)
                    cal.args.min = null;
                    cal.refresh();
                    $("#startdate").val(Calendar.printDate(Calendar.intToDate(SELECTED_RANGE[0]), "%Y-%m-%d"));
                    $("#enddate").val(Calendar.printDate(Calendar.intToDate(SELECTED_RANGE[1]), "%Y-%m-%d"));
                }
            };
        };

        Calendar.setup({
            inputField: "f_date",
            trigger: "f_date",
            date: new Date(),
            selectionType: Calendar.SEL_SINGLE,
            onSelect: getSelectionHandler()
        });
    //]]></script>
@model SL_FX.Models.slsoft_ias_sys_t_site

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>slsoft_ias_sys_t_site</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.SiteID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SiteID)
            @Html.ValidationMessageFor(model => model.SiteID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SiteCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SiteCode)
            @Html.ValidationMessageFor(model => model.SiteCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SiteName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SiteName)
            @Html.ValidationMessageFor(model => model.SiteName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DomainName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DomainName)
            @Html.ValidationMessageFor(model => model.DomainName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Province)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Province)
            @Html.ValidationMessageFor(model => model.Province)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Area)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Area)
            @Html.ValidationMessageFor(model => model.Area)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SiteType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SiteType)
            @Html.ValidationMessageFor(model => model.SiteType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SiteAdmin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SiteAdmin)
            @Html.ValidationMessageFor(model => model.SiteAdmin)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RunningState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RunningState)
            @Html.ValidationMessageFor(model => model.RunningState)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsValid)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsValid)
            @Html.ValidationMessageFor(model => model.IsValid)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateTime)
            @Html.ValidationMessageFor(model => model.CreateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ModifiyTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ModifiyTime)
            @Html.ValidationMessageFor(model => model.ModifiyTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AuditState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AuditState)
            @Html.ValidationMessageFor(model => model.AuditState)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
